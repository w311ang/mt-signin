# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: signin

on:
  push:
    branches: [ main ]
    paths:
      - 'xc_signin.py'
      - 'zhuan.py'
      - 'sjly.py'
#  watch:
#    types: started
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    #if: github.event.repository.owner.id == github.event.sender.id
    environment: Production

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: xcysc
      if: always()
      env:
        username: ${{ secrets.xc_username }}
        password: ${{ secrets.xc_password }}
      run: |
        python xc_signin.py
    - name: sjly
      if: always()
      env:
        id: ${{ secrets.sjly_id }}
      run: |
        python sjly.py
    - name: zhuan
      if: always()
      env:
        cookie: ${{ secrets.zhuan_cookie }}
      run: |
        python zhuan.py
    - name: Set proxy
      env:
        config: ${{ secrets.ss_config }}
      run: |
        sudo apt-get install shadowsocks-libev simple-obfs proxychains-ng
        sudo -E sh -c 'echo $config|base64 -d > /etc/shadowsocks-libev/config.json'
        sudo sh -c 'echo "\
        [Unit]
        Description=Shadowsocks
        After=network.target
        [Service]
        ExecStart=ss-local -c /etc/shadowsocks-libev/config.json
        Rnestart=on-abort
        [Install]
        WantedBy=multi-user.target\
        ">/etc/systemd/system/shadowsocks.service'
        sudo systemctl daemon-reload
        sudo systemctl start shadowsocks
        sleep 3s
        systemctl status --no-pager shadowsocks
        sudo sed -i 's/socks4 	127.0.0.1 9050/socks5 127.0.0.1 1080/g' /etc/proxychains4.conf
        sudo sed -i 's/#quiet_mode/quiet_mode/g' /etc/proxychains4.conf
    - name: blink
      if: always()
      run: |
        echo "::group::Install dependencies"
        pip install python-telegram
        git clone https://github.com/alexander-akhmetov/python-telegram
        echo "::endgroup::"
        proxychains python python-telegram/examples/send_message.py ${{ secrets.blink_secret }} '/checkin'
